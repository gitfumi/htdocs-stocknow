@charset "utf-8";

// ---------------------------------------------------------
// グラデーション
// @include bgGradient(角度●●deg, 色, 色相差の割合20%);
// ---------------------------------------------------------
// ストライプ（複数色）
// @include bgStripes(角度●●deg, 色 色 色);
// 半角スペースを開けてカラーコードを記述すると好きな数だけ並べられます。
// ---------------------------------------------------------
// ストライプ
// @include bgStripe(方向horizontal or vertical or both, 線の色, 線の太さ, 背景色, 線の透明度);
// ---------------------------------------------------------
// 斜めストライプ
// @include bgDiagonalStripe(角度●●deg or both, 線の色, 線の太さ, 背景色, 線の透明度);
// ---------------------------------------------------------
// チェック
// @include bgCheck(背景色, ドットの色, ドットの大きさ);
// @include bgCheckOpacity(チェックの色, チェックの大きさ, 背景色, 透明度);
// ---------------------------------------------------------
// 斜めチェック
// @include bgDiagonalCheck(チェックの色, チェックの大きさ, 背景色);
// @include bgDiagonalCheckOpacity(チェックの色, チェックの大きさ, 背景色, 透明度);
// ---------------------------------------------------------
// ドット
// @include bgDot(背景色, ドットの色, ドットの大きさ);
// ---------------------------------------------------------

// グラデーション
// @include bgGradient(角度●●deg, 色, 色相差の割合20%);
@mixin bgGradient (
	$angle: 180deg,
	$color: #0bd,
	$amount: 20%
	) {
	background: linear-gradient($angle, $color, adjust-hue($color, $amount));
}

// ストライプ（複数色）
// @include bgStripes(角度●●deg, 色 色 色);
// 半角スペースを開けてカラーコードを記述すると好きな数だけ並べられます。
@mixin bgStripes ($angle, $colors) {
	$length: length($colors);
	@if $length > 1 {
		$stripes: ();
		@for $i from 1 through $length {
			$stripe: (100% / $length) * ($i - 1);
			@if $i > 1 {
				$previous-color: nth($colors, $i - 1);
				$stripes: append($stripes, $previous-color $stripe, comma);
			}
			$stripes: append($stripes, nth($colors, $i) $stripe, comma);
		}
		background: linear-gradient($angle, $stripes);
	} @else if $length == 1 {
		background-color: $colors;
	}
}

// ストライプ
// @include bgStripe(方向horizontal or vertical or both, 線の色, 線の太さ, 背景色, 線の透明度);
@mixin bgStripe (
	$direction: both,
	$stripeColor: #e5f8fe,
	$size: 30px,
	$backgroundColor: #fff,
	$opacity: 1
	) {
	@if $direction == horizontal {
		background-image: repeating-linear-gradient(rgba($stripeColor, $opacity), rgba($stripeColor, $opacity) $size, $backgroundColor 0, $backgroundColor $size * 2);
	}
	@if $direction == vertical {
		background-image: repeating-linear-gradient(90deg, rgba($stripeColor, $opacity), rgba($stripeColor, $opacity) $size, $backgroundColor 0, $backgroundColor $size * 2);
	}
	@if $direction == both {
		background-color: $backgroundColor;
		background-image: linear-gradient(90deg, rgba($stripeColor, $opacity) 50%, transparent 50%), linear-gradient(rgba($stripeColor, $opacity) 50%, transparent 50%);
		background-size: $size * 2 $size * 2;
	}
}

// 斜めストライプ
// @include bgDiagonalStripe(角度●●deg or both, 線の色, 線の太さ, 背景色, 線の透明度);
@mixin bgDiagonalStripe (
	$angle: 45deg,
	$stripeColor: #e5f8fe,
	$size: 30px,
	$backgroundColor: #fff,
	$opacity: 1
	) {
	@if $angle == both {
		background-color: $backgroundColor;
		background-image: linear-gradient(-45deg, rgba($stripeColor, $opacity) 25%, transparent 25%, transparent 50%, rgba($stripeColor, $opacity) 50%, rgba($stripeColor, $opacity) 75%, transparent 75%, transparent 100%), linear-gradient(45deg, rgba($stripeColor, $opacity) 25%, transparent 25%, transparent 50%,  rgba($stripeColor, $opacity) 50%, rgba($stripeColor, $opacity) 75%, transparent 75%, transparent 100%);
		background-size: $size $size;
	} @else {
		background-image: repeating-linear-gradient($angle, rgba($stripeColor, $opacity), rgba($stripeColor, $opacity) $size, $backgroundColor 0, $backgroundColor $size * 2);
	}
}

// チェック
// @include bgCheck(チェックの色, チェックの大きさ, 背景色);
@mixin bgCheck (
	$checkColor: #000,
	$checkSize: 20px,
	$backgroundColor: #fff
	){
	background-color: $backgroundColor;
	background-image: linear-gradient(45deg, $checkColor 25%, transparent 25%, transparent 75%, $checkColor 75%, $checkColor), linear-gradient(45deg, $checkColor 25%, transparent 25%, transparent 75%, $checkColor 75%, $checkColor);
	background-position: 0 0, $checkSize $checkSize;
	background-size: ($checkSize * 2) ($checkSize * 2);
}
// @include bgCheckOpacity(チェックの色, チェックの大きさ, 背景色, 透明度);
@mixin bgCheckOpacity (
	$checkColor: #000,
	$checkSize: 20px,
	$backgroundColor: #fff,
	$opacity: .5
	){
	background-color: $backgroundColor;
	background-image: linear-gradient(90deg, rgba($checkColor, $opacity) 50%, transparent 50%), linear-gradient(rgba($checkColor, $opacity) 50%, transparent 50%);
	background-size: ($checkSize * 2) ($checkSize * 2);
}

// 斜めチェック
// @include bgDiagonalCheck(チェックの色, チェックの大きさ, 背景色);
@mixin bgDiagonalCheck (
	$checkColor: #000,
	$checkSize: 20px,
	$backgroundColor: #fff
	){
	background-color: $backgroundColor;
	background-image: linear-gradient(45deg, $checkColor 25%, transparent 25%, transparent 75%, $checkColor 75%, $checkColor), linear-gradient(-45deg, $checkColor 25%, transparent 25%, transparent 75%, $checkColor 75%, $checkColor);
	background-size: $checkSize $checkSize;
}
// @include bgDiagonalCheckOpacity(チェックの色, チェックの大きさ, 背景色, 透明度);
@mixin bgDiagonalCheckOpacity (
	$checkColor: #000,
	$checkSize: 20px,
	$backgroundColor: #fff,
	$opacity: .5
	){
	background-color: $backgroundColor;
	background-image: linear-gradient(-45deg, rgba($checkColor, $opacity) 25%, transparent 25%, transparent 50%, rgba($checkColor, $opacity) 50%, rgba($checkColor, $opacity) 75%, transparent 75%, transparent 100%), linear-gradient(45deg, rgba($checkColor, $opacity) 25%, transparent 25%, transparent 50%,  rgba($checkColor, $opacity) 50%, rgba($checkColor, $opacity) 75%, transparent 75%, transparent 100%);
	background-size: ($checkSize * 2) ($checkSize * 2);
}

// ドット
// @include bgDot(ドットの色, ドットの大きさ, 背景色);
@mixin bgDot(
	$dotColor: #000,
	$dotSize: 40px,
	$backgroundColor: #fff,
	$dotPosition: $dotSize / 2
	){
	background: $backgroundColor;
	background-image: radial-gradient($dotColor 24%, transparent 0), radial-gradient($dotColor 24%, transparent 0);
	background-position: 0 0, $dotPosition $dotPosition;
	background-size: $dotSize $dotSize;
}