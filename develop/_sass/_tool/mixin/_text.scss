@charset "utf-8";

// ---------------------------------------------------------
// リンクカラー設定
// @include setLinkColor(フォントカラー);
// ---------------------------------------------------------
// リンクスタイルリセット
// @include resetLinkStyle(フォントカラー);
// ---------------------------------------------------------
// テキスト非表示
// @include hideText;
// ---------------------------------------------------------
// テキストが領域からはみ出ている場合に、末尾に省略符号（ ... ）を表示
// @include ellipsis;
// ---------------------------------------------------------
// 蛍光ペンで線を引いたような効果
// @include marker(線の幅（0%太い←→細い100%）, 線の色);
// ---------------------------------------------------------
// テキストの両端に斜め線（＼ テキスト ／）
// @include bothSideBorder(線の色, 線の長さ, 線の幅, 線の位置, 角度);
// ---------------------------------------------------------
// グラデーションテキスト
// @include gradientText(角度●●deg, ベースの色, 色相差の割合);
// グラデーションテキストに対応していないブラウザーはベースの色で表示されます
// ---------------------------------------------------------

// リンクカラー設定
// @include setLinkColor(フォントカラー);
@mixin setLinkColor(
	$color: inherit
	) {
	color: $color;
	text-decoration: underline;
	&:hover {
		color: lighten($color, 15%);
		text-decoration: none;
	}
	&:visited {
		color: desaturate($color, 50%);
	}
}

// リンクスタイルリセット
// @include resetLinkStyle(フォントカラー);
@mixin resetLinkStyle(
	$color: inherit
	) {
	color: $color;
	text-decoration: none;
}

// テキスト非表示
// @include hideText;
@mixin hideText {
	overflow: hidden;
	text-indent: 100%;
	white-space: nowrap;
}

// テキストが領域からはみ出ている場合に、末尾に省略符号（ ... ）を表示
// @include ellipsis;
@mixin ellipsis {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

// 蛍光ペンで線を引いたような効果
// @include marker(線の幅（0%太い←→細い100%）, 線の色);
@mixin marker(
	$borderWidth: 60%,
	$borderColor: #ff9
	) {
	background: linear-gradient(transparent $borderWidth, $borderColor $borderWidth);
}

// テキストの両端に斜め線（＼ テキスト ／）
// @include bothSideBorder(線の色, 線の長さ, 線の幅, 線の位置, 角度);
@mixin bothSideBorder (
	$borderColor: $baseBorderColor,
	$borderHeight: 1.2em,
	$borderWidth: 1px,
	$borderPosition: .3em,
	$angle: 45deg
	) {
		&:before,
		&:after {
			position: relative;
			top: -0.4em;
			content: "";
			display: inline-block;
			width: $borderHeight;
			height: $borderWidth;
			background-color: $borderColor;
		}
		&:before {
			margin-right: $borderPosition;
			transform: rotate($angle);
		}
		&:after {
			margin-left: $borderPosition;
			transform: rotate(-$angle);
	}
}

// グラデーションテキスト
// @include gradientText(角度●●deg, ベースの色, 色相差の割合);
// グラデーションテキストに対応していないブラウザーはベースの色で表示されます
@mixin gradientText (
	$angle: 45deg,
	$color: #f82,
	$amount: 35%
	) {
	color: $color;
	background: -webkit-linear-gradient($angle, $color, adjust-hue($color, $amount));
	-webkit-text-fill-color: transparent;
	-webkit-background-clip: text;
	display: inline-block;
}

// リンクテキスト
// @include motionLinkTxt(色);
@mixin motionLinkTxt(
		$color : $baseTextColor
	){
	display: inline-block;
	// margin: 5px 0;
	position: relative;
	z-index: 0;
	&:before{
		content: '';
		position: absolute;
		bottom: 5px;
		left: 0;
		width: 100%;
		height: 2px;
		transition: all .5s;
		background-color: $color;
		opacity: 0;
		z-index: -1;
	}
	&:hover{
		&:before{
			opacity: 1;
			bottom: 0px;
		}
	}
}